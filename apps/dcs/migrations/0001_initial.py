# Generated by Django 2.2.4 on 2022-11-03 10:53

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DcsIndicators',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(blank=True, verbose_name='Время показаний')),
                ('value', models.FloatField(default=0.0, verbose_name='Показание')),
            ],
            options={
                'verbose_name': 'показание датчика',
                'verbose_name_plural': 'показания датчиков',
                'ordering': ('sensor',),
            },
        ),
        migrations.CreateModel(
            name='DcsSensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(default=' ', max_length=160, verbose_name='ТЭГ')),
                ('name', models.CharField(default=' ', max_length=160, verbose_name='Наименование')),
                ('critical_value', models.FloatField(default=0.0, verbose_name='Критически допустимое значение')),
                ('critical_type', models.CharField(choices=[('max', 'Максимальный'), ('min', 'Минимальный')], default=1, max_length=3, verbose_name='Тип')),
                ('active', models.BooleanField(blank=True, default=True, verbose_name='Активный')),
                ('ratio', models.IntegerField(blank=True, default=1, verbose_name='Масштабирование')),
                ('value', models.FloatField(blank=True, default=0.0, verbose_name='Показание')),
                ('max_value', models.FloatField(blank=True, default=0.0, verbose_name='Максимальное значение')),
                ('unit', models.CharField(default=' ', max_length=10, verbose_name='Ед.измерения')),
                ('comments', models.TextField(blank=True, default=' ', max_length=1001, verbose_name='Комментарий')),
                ('scale', models.CharField(default='0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0', max_length=250, verbose_name='Шкала датчика')),
                ('norm_value_from', models.FloatField(default=0.0, verbose_name='Показатель нормы от')),
                ('norm_value_to', models.FloatField(default=0.0, verbose_name='Показатель нормы до')),
                ('danger_value_from', models.FloatField(default=0.0, verbose_name='Показатель опасности от')),
                ('danger_value_to', models.FloatField(default=0.0, help_text='Показатель опасности до', verbose_name='Показатель опасности до')),
                ('critical_value_from', models.FloatField(default=0.0, verbose_name='Критический показатель от')),
                ('critical_value_to', models.FloatField(default=0.0, verbose_name='Критический показатель до')),
                ('connect_time', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='Последнее подключение')),
            ],
            options={
                'verbose_name': 'датчик',
                'verbose_name_plural': 'датчики',
                'ordering': ('name',),
            },
        ),
        migrations.AddIndex(
            model_name='dcssensor',
            index=models.Index(fields=['tag'], name='dcs_dcssens_tag_53b927_idx'),
        ),
        migrations.AddIndex(
            model_name='dcssensor',
            index=models.Index(fields=['name'], name='dcs_dcssens_name_3a47c4_idx'),
        ),
        migrations.AddIndex(
            model_name='dcssensor',
            index=models.Index(fields=['tag', 'name'], name='dcs_dcssens_tag_900b45_idx'),
        ),
        migrations.AddField(
            model_name='dcsindicators',
            name='sensor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dcs.DcsSensor', verbose_name='Датчики'),
        ),
        migrations.AddIndex(
            model_name='dcsindicators',
            index=models.Index(fields=['date_time', 'sensor'], name='dcs_dcsindi_date_ti_7175b6_idx'),
        ),
    ]
